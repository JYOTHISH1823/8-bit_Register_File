$date
	Tue Aug 19 17:26:40 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module register_file_tb $end
$var wire 8 ! read_data2 [7:0] $end
$var wire 8 " read_data1 [7:0] $end
$var reg 1 # clk $end
$var reg 3 $ read_addr1 [2:0] $end
$var reg 3 % read_addr2 [2:0] $end
$var reg 1 & we $end
$var reg 3 ' write_addr [2:0] $end
$var reg 8 ( write_data [7:0] $end
$scope module dut $end
$var wire 1 # clk $end
$var wire 3 ) read_addr1 [2:0] $end
$var wire 3 * read_addr2 [2:0] $end
$var wire 1 & we $end
$var wire 3 + write_addr [2:0] $end
$var wire 8 , write_data [7:0] $end
$var reg 8 - read_data1 [7:0] $end
$var reg 8 . read_data2 [7:0] $end
$var integer 32 / i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
0&
b0 %
b0 $
0#
b0 "
b0 !
$end
#5000
1#
#10000
0#
b10101010 (
b10101010 ,
1&
#15000
b10101010 !
b10101010 .
b10101010 "
b10101010 -
1#
#20000
0#
b1010101 (
b1010101 ,
b1 '
b1 +
#25000
1#
#30000
b1010101 !
b1010101 .
0#
b1 %
b1 *
0&
#35000
1#
#40000
0#
#45000
1#
#50000
0#
